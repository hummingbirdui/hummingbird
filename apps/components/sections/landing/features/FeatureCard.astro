---
import GradientBorderBox from '../common/GradientBorderBox.astro';
import type { Feature } from 'apps/data/landing/features.astro';

interface Props {
  feature: Feature;
}

const { feature } = Astro.props;
const { icon: Icon, color, title, description } = feature;

const cardStyleMap: Record<string, { icon: string; iconWrapper: string; overlay: string }> = {
  primary: {
    icon: 'text-primary-dark',
    iconWrapper: 'border-primary-dark bg-primary-lighter',
    overlay: "bg-[url('/images/features/primary.png')]",
  },
  secondary: {
    icon: 'text-secondary-dark',
    iconWrapper: 'border-secondary-dark bg-secondary-lighter',
    overlay: "bg-[url('/images/features/secondary.png')]",
  },
  error: {
    icon: 'text-danger-dark',
    iconWrapper: 'border-danger-dark bg-danger-lighter',
    overlay: "bg-[url('/images/features/error.png')]",
  },
  warning: {
    icon: 'text-warning-dark',
    iconWrapper: 'border-warning-dark bg-warning-lighter',
    overlay: "bg-[url('/images/features/warning.png')]",
  },
  info: {
    icon: 'text-info-dark',
    iconWrapper: 'border-info-dark bg-info-lighter',
    overlay: "bg-[url('/images/features/info.png')]",
  },
  success: {
    icon: 'text-success-dark',
    iconWrapper: 'border-success-dark bg-success-lighter',
    overlay: "bg-[url('/images/features/success.png')]",
  },
};

const { icon: iconStyle, iconWrapper: iconWrapperStyle, overlay } = cardStyleMap[color];
---

<GradientBorderBox color={color}>
  <div class={`p-6 relative bg-subtle bg-cover bg-center bg-no-repeat ${overlay}`}>
    <Icon class={`h-16 w-16 opacity-10 absolute top-2.5 right-2.5 ${iconStyle}`} />
    <div class={`mb-7 h-10 w-10 flex items-center justify-center rounded-full border ${iconWrapperStyle}`}>
      <Icon class={iconStyle} />
    </div>
    <h3 class="mb-4 text-base font-semibold">{title}</h3>
    <p class="text-sm text-muted">{description}</p>
  </div>
</GradientBorderBox>
