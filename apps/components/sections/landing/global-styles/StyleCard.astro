---
import type { StyleSystem } from 'apps/data/landing/global-styles';
import Code from 'astro/components/Code.astro';
import CopyIcon from '@components/icons/CopyIcon.astro';
import CheckIcon from '@components/icons/CheckIcon.astro';

interface Props {
  style: StyleSystem;
  class?: string;
}

const { style, class: className = '' } = Astro.props;
---

<div class={`p-6 flex flex-col min-h-65 md:min-h-92 border border-base bg-subtle rounded-2xl ${className}`}>
  <h3 class="mb-2 text-[21px] font-semibold">{style.title}</h3>
  <p class="mb-6 text-highlight text-sm">
    {style.description}
  </p>
  <div class="relative flex-1">
    <button class="copy-btn p-0.5 absolute top-2 right-2 md:top-3 md:right-3" data-code={style.code}>
      <CopyIcon class="copy-icon" />
      <CheckIcon class="check-icon hidden text-success" />
    </button>
    <Code
      class="!text-sm h-full !bg-muted !rounded-lg scrollbar-hide !pt-6"
      data-astro-code
      code={style.code}
      themes={{ light: 'github-light', dark: 'github-dark' }}
      lang="sass"
    />
  </div>
</div>

<script>
  document.querySelectorAll<HTMLButtonElement>('.copy-btn').forEach((btn) => {
    const copyIcon = btn.querySelector<HTMLElement>('.copy-icon');
    const checkIcon = btn.querySelector<HTMLElement>('.check-icon');

    btn.addEventListener('click', async () => {
      const code = btn.dataset.code;
      if (!code) return;

      try {
        await navigator.clipboard.writeText(code);

        if (copyIcon && checkIcon) {
          copyIcon.classList.add('hidden');
          checkIcon.classList.remove('hidden');

          setTimeout(() => {
            checkIcon.classList.add('hidden');
            copyIcon.classList.remove('hidden');
          }, 1200);
        }
      } catch (err) {
        console.error('Failed to copy: ', err);
      }
    });
  });
</script>
