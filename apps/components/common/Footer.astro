---
import hummingbird from '@assets/images/logos/hummingbird.svg';
import { footerLinks, socialLinks } from 'apps/data/footer-links.astro';
import { Image } from 'astro:assets';
const isLanding = Astro.url.pathname === '/';
---

<footer
  class={`px-6 lg:px-10 ${!isLanding && "bg-cover bg-center bg-no-repeat bg-[url('/images/footer-light.png')] dark:bg-[url('/images/footer-dark.png')]"}`}
>
  <div class="mx-auto max-w-8xl">
    <div class="grid grid-cols-10 xl:grid-cols-15 xl:gap-8 gap-y-12 py-12">
      <div class="col-span-10 xl:col-span-5">
        <div class="mb-4 flex items-center gap-2">
          <Image src={hummingbird} alt="Logo" class="w-10 h-10" />
          <span class="text-2xl font-semibold text-muted">hummingbird</span>
        </div>
        <p class="mb-4 text-sm text-muted xl:max-w-75">
          Crafted with care, caffeine, and clean code by <a
            href="https://themewagon.com/"
            class="text-default no-underline font-semibold">ThemeWagon</a
          > â€“ trusted by 2M+ Devs & Counting.
        </p>
        <p class="text-sm text-muted">
          <a href="https://github.com/hummingbirdui/hummingbird/blob/main/LICENSE" class="text-muted"
            >MIT</a
          > for code, <a href="https://creativecommons.org/licenses/by/4.0/" class="text-muted"
            >CC BY 4.0</a
          > for docs.
        </p>
      </div>

      {
        footerLinks.map(({ title, links }) => (
          <div class="col-span-10 sm:col-span-4 md:col-span-2">
            <h3 class="mb-5 text-sm font-bold text-subtle">{title}</h3>
            <ul class="list-none p-0 space-y-5">
              {links.map(({ label, url }) => (
                <li class="text-sm">
                  <a href={url} class="no-underline text-default">
                    {label}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))
      }

      <div class="col-span-10 sm:col-span-6 md:col-span-4">
        <h3 class="mb-4 text-sm font-bold text-subtle">Newsletter</h3>
        <form class="mb-10.5 flex gap-2 max-w-sm" data-subscription-form>
          <input
            type="text"
            class="form-control-fill form-control-primary"
            data-subscription-email
            placeholder="Enter your email address"
          />
          <button type="submit" class="btn btn-subtle-primary shrink-0">Subscribe</button>
        </form>
        <h3 class="mb-4 text-sm font-bold text-subtle">Stay Connected</h3>
        <div class="flex gap-4">
          {
            socialLinks.map((item) => (
              <a href={item.url} class="btn btn-subtle-neutral btn-circle">
                <item.icon />
              </a>
            ))
          }
        </div>
      </div>
    </div>

    <div class="border-t border-light py-5">
      <p class="mb-0 text-center text-sm text-muted">Hummingbird &copy; 2025, all rights reserved</p>
    </div>
  </div>
  <div class="alert alert-subtle-success mb-5 fixed z-9999 top-8 right-8 hidden" data-success-alert role="alert">
    Successfully Subscribed
  </div>
</footer>
<!-- <script>
  const form = document.querySelector('[data-subscription-form]') as HTMLFormElement;
  const email = document.querySelector('[data-subscription-email]') as HTMLInputElement;
  const successMessage = document.querySelector('[data-success-alert]') as HTMLElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    try {
      const res = await fetch('	https://api.mailbluster.com/api/leads', {
        method: 'POST',
        headers: {
          Authorization: '9889a807-bd61-4234-95fe-1936e33d961a',
          'Content-Type': 'application/json',
          'Cache-Control': 'no-cache',
        },
        body: JSON.stringify({ email: email.value }),
      });
      const out = await res.json();
      if (out.ok) {
        form.reset();
        successMessage.classList.remove('hidden');
        setTimeout(() => {
          successMessage.classList.add('hidden');
        }, 3000);
      } else {
        console.log('An error occurs');
      }
    } catch (err) {
      console.log(err);
    }
  });
</script> -->
