---
import logo from '@assets/images/logos/hummingbird.svg';
import BulbIcon from '@components/icons/BulbIcon.astro';
import GitHubIcon from '@components/icons/GithubIcon.astro';
import MenuIcon from '@components/icons/MenuIcon.astro';
import TimesIcon from '@components/icons/TimesIcon.astro';
import { Image } from 'astro:assets';
import BulbOffIcon from '@components/icons/BulbOffIcon.astro';
import '@docsearch/css';

const menuItems = [
  { name: 'Docs', path: '/docs/getting-started/installation' },
  { name: 'Components', path: '/docs/components' },
  { name: 'Examples', path: '#' },
  { name: 'Blog', path: '#' },
  { name: 'Roadmap', path: '#' },
];

const currentPath = Astro.url.pathname;
---

<nav class="px-6 md:px-10 sticky top-0 border-b border-light bg-default z-50">
  <div class="mx-auto py-5 flex items-center w-full max-w-8xl">
    <a class="navbar-brand flex items-center gap-2" href="/">
      <Image src={logo} alt="Logo" class="w-10 h-10" />
      <h5 class="mb-0 text-muted font-semibold hidden sm:flex">hummingbird</h5>
    </a>
    <span class="ml-1 sm:ml-4 badge badge-subtle shrink-0">v 1.0.0</span>
    <div id="docsearch" class="hidden lg:block"></div>

    <ul class="navbar-nav ms-auto flex-row items-center hidden xl:flex">
      {
        menuItems.map((item) => (
          <li class="nav-item">
            <a
              href={item.path}
              class={`nav-link px-4 py-2.5 text-sm rounded-lg hover:bg-hover ${
                currentPath === item.path ? 'text-primary' : ''
              }`}
              aria-disabled="true"
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>
    <div id="docsearch-mobile" class="lg:hidden ml-auto"></div>

    <div class="mx-2 xl:mx-4 my-auto border-l h-8 xl:h-10 border-base flex lg:hidden xl:flex"></div>

    <button class="lg:ml-auto xl:ml-0 btn btn-circle btn-subtle-neutral" data-theme-toggle-btn>
      <BulbIcon data-theme-toggle="dark" />
      <BulbOffIcon data-theme-toggle="light" class="hidden" />
    </button>
    <a
      href="https://github.com/hummingbirdui/hummingbird"
      target="_blank"
      class="ml-2 btn max-lg:btn-circle btn-subtle-neutral"
    >
      <GitHubIcon />
      <span class="hidden lg:flex">20.5k</span>
    </a>
    <button id="drawerToggle" class="ml-6 btn btn-circle btn-subtle-neutral flex xl:hidden">
      <MenuIcon />
    </button>
  </div>
</nav>

<!-- Drawer -->
<div
  id="drawer"
  class="fixed top-0 right-0 h-full w-80 bg-default dark:bg-subtle border-l border-transparent dark:border-light transform translate-x-full transition-transform duration-300 ease-in-out z-50"
>
  <div class="px-6 py-5 flex justify-between items-center">
    <a class="navbar-brand flex items-center gap-2" href="/">
      <Image src={logo} alt="Logo" class="w-10 h-10" />
      <h5 class="mb-0 text-muted font-semibold">hummingbird</h5>
    </a>
    <button id="drawerClose" class="btn btn-square bg-transparent">
      <TimesIcon />
    </button>
  </div>
  <ul class="navbar-nav px-6 space-y-1">
    {
      menuItems.map((item) => (
        <li class="nav-item">
          <a
            href={item.path}
            class={`nav-link px-4 py-2 text-default font-normal rounded-lg hover:bg-hover   ${
              currentPath.startsWith(item.path) ? 'text-primary' : ''
            }`}
          >
            {item.name}
          </a>
        </li>
      ))
    }
  </ul>
</div>

<div
  id="drawerOverlay"
  class="fixed inset-0 bg-black/50 opacity-0 pointer-events-none transition-opacity duration-300 z-40"
>
</div>

<script>
  const drawer = document.getElementById('drawer') as HTMLElement;
  const overlay = document.getElementById('drawerOverlay') as HTMLElement;
  const toggleBtn = document.getElementById('drawerToggle') as HTMLButtonElement;
  const closeBtn = document.getElementById('drawerClose') as HTMLButtonElement;

  const openDrawer = () => {
    drawer.classList.remove('translate-x-full');
    drawer.classList.add('translate-x-0');

    overlay.classList.remove('opacity-0', 'pointer-events-none');
    overlay.classList.add('opacity-100');

    document.body.classList.add('overflow-hidden');
  };

  const closeDrawer = () => {
    drawer.classList.add('translate-x-full');
    drawer.classList.remove('translate-x-0');

    overlay.classList.add('opacity-0', 'pointer-events-none');
    overlay.classList.remove('opacity-100');

    document.body.classList.remove('overflow-hidden');
  };

  toggleBtn.addEventListener('click', openDrawer);
  closeBtn.addEventListener('click', closeDrawer);
  overlay.addEventListener('click', closeDrawer);
</script>
