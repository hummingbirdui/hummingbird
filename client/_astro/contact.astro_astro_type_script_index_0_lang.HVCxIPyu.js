class n{constructor(t=0,s="Network Error"){this.status=t,this.text=s}}const E=()=>{if(!(typeof localStorage>"u"))return{get:e=>Promise.resolve(localStorage.getItem(e)),set:(e,t)=>Promise.resolve(localStorage.setItem(e,t)),remove:e=>Promise.resolve(localStorage.removeItem(e))}},r={origin:"https://api.emailjs.com",blockHeadless:!1,storageProvider:E()},f=e=>e?typeof e=="string"?{publicKey:e}:e.toString()==="[object Object]"?e:{}:{},K=(e,t="https://api.emailjs.com")=>{if(!e)return;const s=f(e);r.publicKey=s.publicKey,r.blockHeadless=s.blockHeadless,r.storageProvider=s.storageProvider,r.blockList=s.blockList,r.limitRate=s.limitRate,r.origin=s.origin||t},g=async(e,t,s={})=>{const a=await fetch(r.origin+e,{method:"POST",headers:s,body:t}),i=await a.text(),o=new n(a.status,i);if(a.ok)return o;throw o},y=(e,t,s)=>{if(!e||typeof e!="string")throw"The public key is required. Visit https://dashboard.emailjs.com/admin/account";if(!t||typeof t!="string")throw"The service ID is required. Visit https://dashboard.emailjs.com/admin";if(!s||typeof s!="string")throw"The template ID is required. Visit https://dashboard.emailjs.com/admin/templates"},B=e=>{if(e&&e.toString()!=="[object Object]")throw"The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/"},w=e=>e.webdriver||!e.languages||e.languages.length===0,k=()=>new n(451,"Unavailable For Headless Browser"),N=(e,t)=>{if(!Array.isArray(e))throw"The BlockList list has to be an array";if(typeof t!="string")throw"The BlockList watchVariable has to be a string"},O=e=>!e.list?.length||!e.watchVariable,M=(e,t)=>e instanceof FormData?e.get(t):e[t],L=(e,t)=>{if(O(e))return!1;N(e.list,e.watchVariable);const s=M(t,e.watchVariable);return typeof s!="string"?!1:e.list.includes(s)},P=()=>new n(403,"Forbidden"),x=(e,t)=>{if(typeof e!="number"||e<0)throw"The LimitRate throttle has to be a positive number";if(t&&typeof t!="string")throw"The LimitRate ID has to be a non-empty string"},D=async(e,t,s)=>{const a=Number(await s.get(e)||0);return t-Date.now()+a},j=async(e,t,s)=>{if(!t.throttle||!s)return!1;x(t.throttle,t.id);const a=t.id||e;return await D(a,t.throttle,s)>0?!0:(await s.set(a,Date.now().toString()),!1)},S=()=>new n(429,"Too Many Requests"),A=async(e,t,s,a)=>{const i=f(a),o=i.publicKey||r.publicKey,l=i.blockHeadless||r.blockHeadless,d=i.storageProvider||r.storageProvider,m={...r.blockList,...i.blockList},u={...r.limitRate,...i.limitRate};return l&&w(navigator)?Promise.reject(k()):(y(o,e,t),B(s),s&&L(m,s)?Promise.reject(P()):await j(location.pathname,u,d)?Promise.reject(S()):g("/api/v1.0/email/send",JSON.stringify({lib_version:"4.4.1",user_id:o,service_id:e,template_id:t,template_params:s}),{"Content-type":"application/json"}))},J=e=>{if(!e||e.nodeName!=="FORM")throw"The 3rd parameter is expected to be the HTML form element or the style selector of the form"},C=e=>typeof e=="string"?document.querySelector(e):e,I=async(e,t,s,a)=>{const i=f(a),o=i.publicKey||r.publicKey,l=i.blockHeadless||r.blockHeadless,d=r.storageProvider||i.storageProvider,m={...r.blockList,...i.blockList},u={...r.limitRate,...i.limitRate};if(l&&w(navigator))return Promise.reject(k());const b=C(s);y(o,e,t),J(b);const c=new FormData(b);return L(m,c)?Promise.reject(P()):await j(location.pathname,u,d)?Promise.reject(S()):(c.append("lib_version","4.4.1"),c.append("service_id",e),c.append("template_id",t),c.append("user_id",o),g("/api/v1.0/email/send-form",c))},T={init:K,send:A,sendForm:I,EmailJSResponseStatus:n};T.init({publicKey:"x-KTkRABP7cJyXeBp"});const R=document.querySelector("[data-contact-first-name]"),q=document.querySelector("[data-contact-last-name]"),H=document.querySelector("[data-contact-email]"),V=document.querySelector("[data-contact-subject]"),F=document.querySelector("[data-contact-message]"),p=document.querySelector("[data-contact-form]"),v=document.querySelector("[data-success-alert]"),h=[R,q,H,V,F];function _(e){return e.checkValidity()?(e.classList.add("is-valid"),e.classList.remove("is-invalid"),!0):(e.classList.add("is-invalid"),e.classList.remove("is-valid"),!1)}h.forEach(e=>{e.addEventListener("blur",()=>_(e))});p?.addEventListener("submit",async e=>{if(e.preventDefault(),!h.every(a=>_(a)))return;const s={firstName:R.value,lastName:q.value,email:H.value,subject:V.value,message:F.value};try{await T.send("service_sr25hda","template_6othqdq",s),h.forEach(a=>a.classList.remove("is-valid")),p.reset(),v.classList.remove("hidden"),setTimeout(()=>{v.classList.add("hidden")},3e3)}catch{}});
