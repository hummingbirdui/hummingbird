---
import StarIcon from '@components/icons/StarIcon.astro';
import CheckIcon from '@components/icons/CheckIcon.astro';
import CloseIcon from '@components/icons/CloseIcon.astro';
import ErrorIcon from '@components/icons/ErrorIcon.astro';
import { comparisons, frameworks } from 'apps/data/landing/comparisons';
import { Image } from 'astro:assets';

const getIcon = (featureState: string) => {
  switch (featureState) {
    case 'yes':
      return { icon: CheckIcon, color: 'text-primary' };
    case 'no':
      return { icon: CloseIcon, color: 'text-[var(--color-gray-300)] dark:text-[var(--color-gray-600)]' };
    case 'Partial':
      return { icon: ErrorIcon, color: 'text-[var(--color-blue-200)] dark:text-[var(--color-blue-700)]' };
    case 'Enhanced':
      return { icon: StarIcon, color: 'text-primary' };
  }
};
---

<table class="table-fixed rounded-3xl w-full bg-default">
  <thead>
    <tr class="border-b border-light/30">
      <th class="text-left p-4"></th>
      {
        frameworks.map(({ name, logo }, i) => (
          <th class={`p-4  ${i === 0 ? 'bg-subtle rounded-t-2xl' : ''}`}>
            <div class={`flex flex-col items-center ${i === 0 ? 'gap-0' : 'gap-2'}`}>
              <Image src={logo} alt="Logo" class="mx-auto w-10 object-contain" />
              <span class="text-sm font-medium">{name}</span>
            </div>
          </th>
        ))
      }
    </tr>
  </thead>

  <tbody>
    {
      comparisons.map(({ feature, hummingbird, tailwindcss, bootstrap }, i, features) => {
        const frameworkStates = [{ value: hummingbird }, { value: tailwindcss }, { value: bootstrap }];

        return (
          <tr class="border-b border-light/30 last:border-b-0">
            <td class="text-sm text-left px-6 py-4.5 text-muted">{feature}</td>

            {frameworkStates.map(({ value }, j) => {
              const data = getIcon(value);
              const Icon = data?.icon;
              const color = data?.color;

              return (
                <td
                  class={[
                    'text-center px-6 py-4.5',
                    j === 0 && 'bg-subtle',
                    i === features.length - 1 && j === 0 && 'rounded-b-2xl',
                  ]
                    .filter(Boolean)
                    .join(' ')}
                >
                  {Icon &&
                    (value === 'Enhanced' || value === 'Partial' ? (
                      <Icon
                        class={`mx-auto outline-0 ${color}`}
                        data-bs-toggle={'tooltip'}
                        data-bs-placement="top"
                        data-bs-title={value}
                        data-bs-custom-class="table-tooltip"
                      />
                    ) : (
                      <Icon class={`mx-auto outline-0 ${color}`} />
                    ))}
                </td>
              );
            })}
          </tr>
        );
      })
    }
  </tbody>
</table>
